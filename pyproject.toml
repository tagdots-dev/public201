[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=77.0.1", "wheel" ]

[project]
name = "pre-commit-update"
version = "0.8.0"

readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "developers", email = "developers@tagdots.com" },
]
requires-python = ">=3.12.1"

classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dependencies = [
  "click==8.1.8",
  "click-option-group==0.5.6",
  "gitpython==3.1.44",
  "pre-commit==4.2",
  "pygithub==2.6.1",
  "pytest==8.3.5",
  "pyyaml==6.0.2",
  "setuptools==77.0.1",
  "ulid-py==1.1",
  "virtualenv==20.29.3",
]
optional-dependencies.test = [ "build", "commitizen", "coverage", "flake8", "isort", "twine" ]
urls.Homepage = "https://github.com/tagdots/pre-commit-update-hooks"
scripts.update-hooks = "pre_commit_update.run:main"

[dependency-groups]
test = [
  "coverage[toml]",
]

[tool.setuptools.packages.find]
where = [ "." ]

[tool.setuptools.dynamic]
version = { attr = "pre_commit_update.__init__" }

[tool.coverage]
source = [ "." ]

[tool.coverage.run]
branch = true
command_line = "-m unittest discover -s tests/"
include = [ "pre_commit_update/*" ]
omit = [ "tests/*" ]

[tool.coverage.report]
fail_under = 80
show_missing = false
include = [ "pre_commit_update/*" ]

[tool.commitizen]
name = "cz_conventional_commits"
major_version_zero = false
tag_format = "$version"
update_changelog_on_bump = true
version_files = [
  "pre_commit_update/__init__.py:__version__",
]
version_provider = "pep621"
version_scheme = "pep440"
